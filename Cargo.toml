[package]
name = "wasm-zkp-challenge"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

# `wasm-opt` is on by default in for the release profile, but it can be
# disabled by setting it to `false`
# TODO(victor): Should this be enabled?
[package.metadata.wasm-pack.profile.release]
wasm-opt = false

[lib]
crate-type = ["cdylib", "lib"]

[dependencies]
blake3 = { version = "1.3.1" }
bytes = { version = "1.1.0" }
clap = { version = "3.2.8", features = ["derive"] }
thiserror = { version = "1.0.15" }

# wasm dependencies
wasm-bindgen = { version = "0.2.81" }

# crypto dependencies
rand_chacha = { version = "0.3.1", default-features = false }
rand = { version = "0.7.3", features = ["wasm-bindgen"]}
rand_xorshift = { version = "0.2" }

# Note that we override the versions of these modules below.
ark-bls12-381 = { version = "0.3.0" }
ark-std = { version = "0.3.0" }
ark-ff = { version = "0.3.0" }
ark-ec = { version = "0.3.0" }
ark-serialize = { path = "../ark/algebra/serialize", features = ["derive"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size or performance when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }
web-sys = { version = "0.3.58", optional = true }

[patch.crates-io]
ark-bls12-381 = { path = "../ark/curves/bls12_381"}
ark-ec = { path = "../ark/algebra/ec" }
ark-ff = { path = "../ark/algebra/ff" }
ark-std = { git = "https://github.com/arkworks-rs/std", rev="05b7a19a" }

[dev-dependencies]
criterion = { version = "0.3", features = ["html_reports"] }
pprof = { version = "0.10", features = ["flamegraph", "protobuf-codec"] }
serial_test = { version = "0.8.0" }

[features]
# Include a panic hook for printing panic messages to the JS console and web_sys support for adding
# console::log statements.
debug = ["console_error_panic_hook", "web-sys/console"]

# Enable parallel computation in arkworks code. Cannot be used with WASM.
parallel = ["ark-ec/parallel", "ark-ff/parallel"]

# Enable usage of assembly in arkworks implementations.
asm = ["ark-ff/asm"]

# Enable use of the prefetch feature in batch_add within ec.
prefetch = ["ark-ec/prefetch"]

square-no-carry = ["ark-ff/square-no-carry"]

[profile.dev]
debug-assertions = true
incremental = true
opt-level = 1 # Basic optimization
strip = false

[profile.test]
debug-assertions = true
incremental = true
opt-level = 3 # Full optimization
strip = false

[profile.bench]
debug = 2     # Include all debug info
debug-assertions = false
incremental = true
lto = true
opt-level = 3 # Full optimization
overflow-checks = false
strip = false # Leave debug information for profiling

# TODO(victor): Possibly setup profile guided optimization.
# https://doc.rust-lang.org/rustc/profile-guided-optimization.html
[profile.release]
debug-assertions = false
incremental = true
lto = true
opt-level = 3 # Full optimization
overflow-checks = false
strip = true

[[bench]]
name = "bench_pippenger_msm"
harness = false
